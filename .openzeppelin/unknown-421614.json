{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xbb880440D3aC9582F2AC6548a511416825392965",
      "txHash": "0x963d3ca0c15b1298028547ed6f3577107ba4f5de59b11f907a5f1bb9cdcf452c",
      "kind": "transparent"
    },
    {
      "address": "0x8e8C76F59AbD1779538a18C2Ca9f66FCc571E491",
      "txHash": "0x08eb2a75fac6a0f63283264156d99ce924602bf85c87b3c021285c87a0b1642d",
      "kind": "transparent"
    },
    {
      "address": "0xCe37A881067c0f83b4a439f0157a7e5dE055DB06",
      "txHash": "0x627e8149bacd1f411df829944162624db0807728cdc8d3e032d2df0a8c3ea522",
      "kind": "transparent"
    },
    {
      "address": "0x863181A86c1F93200fE9D058D9A72fe512325200",
      "txHash": "0xde9c6c053b8e43231e9b2a6025a6da40442dea5fbb139a350e0edee831087b10",
      "kind": "transparent"
    },
    {
      "address": "0x760af39a4C05882E2BfCf1Fc059D77EE9542d8a8",
      "txHash": "0x734969877daeeb07eb953a1cfdd30c385dc92bd50254558f836854e5247a27e9",
      "kind": "transparent"
    },
    {
      "address": "0x605055A19FEfE8bcd760Eb9A6fF32eC2DbFdDd71",
      "txHash": "0x51a4c7c1d16e0a36965cb05243cd69716fef8189eceee601457bed66e0cea338",
      "kind": "transparent"
    },
    {
      "address": "0xd222b117D6FE8aD14822CF3FAFCC8520B31e97F5",
      "txHash": "0x6955ff4a3387f7e785382375c39c00834d15fba63b4449b9e1b2c11eb1ff4b12",
      "kind": "transparent"
    },
    {
      "address": "0xFE85D55c9f0625Ff1e486D52616133E6d4541396",
      "txHash": "0x33f7a4d9c4232ec86592a5fa07f21466c238dd5b5a8b465225756a70b08b55a6",
      "kind": "transparent"
    },
    {
      "address": "0x0469f1DE0316Df13Ad8c78c336f11193D5F31359",
      "txHash": "0x657521e3d182efb1ce34f63f7c0b854e348fad2621ac1aa652bee0d0f4b042eb",
      "kind": "transparent"
    },
    {
      "address": "0x0ed361b12ECB33f56055Eb7fD5E5D4CEEC1d3b75",
      "txHash": "0x12ed01a1f1d086a0aa8d1724f59a16c53224065060a62c3f1267408b51693610",
      "kind": "transparent"
    },
    {
      "address": "0xCfa59a1eBf2e476ea8B7B963Ab9A084c9022cF90",
      "txHash": "0x342ccc28e42d9593beb02e9dbfd0a369119316e8c39333e7421f57baf86ea7e3",
      "kind": "transparent"
    },
    {
      "address": "0x1F0e77160f827f31BD727e28f6A2d912D5fb4EA2",
      "txHash": "0x501618ea4a45344cf208b752d6514624913a46cccec387aaea48710e713e141d",
      "kind": "transparent"
    },
    {
      "address": "0x906B2B51137f3B39680D22779032e04d4Cdab41e",
      "txHash": "0x2cdd78c427b285d5fec6dfd9e58bf2e8fc01f7d07ce807b4a994fde03a724cae",
      "kind": "transparent"
    },
    {
      "address": "0xbBEeC2b8fBda4d8c76Ad6E27D2C0Cd811a8bDF89",
      "txHash": "0x753585fd73372fba3d788cf3be7c2e186ec6df32424990d3e2483f7b1f80736b",
      "kind": "transparent"
    },
    {
      "address": "0x8A311F4F1E303423D213660ac9c61e0dF217e0C3",
      "txHash": "0x998a08aecd83e9a0a23432f174ba22fecc3205f082ce03d82a489f85cb8cb59c",
      "kind": "transparent"
    },
    {
      "address": "0x7d73671F0E7dF5e27F2473c6aa8a8bB8a66e74Fe",
      "txHash": "0x13fa389aac301a67e76fbadc02ce28ccc68f41afb79d9a569469df503a31df0f",
      "kind": "transparent"
    },
    {
      "address": "0xe6d56023B962791d0971De412F58ad3C4C9df450",
      "txHash": "0x13972c39d7db4ed69737d6ffab98ef6d40a6fa5b50e9e3927247a0fbe66bfc35",
      "kind": "transparent"
    },
    {
      "address": "0xF490c5a50FE0e8C78Ec3181571424490411cf5D7",
      "txHash": "0x8c56b285f4ce83acb8ecf09cdbb93cfbc664c7ee5845d72606f5d48013b0f853",
      "kind": "transparent"
    },
    {
      "address": "0x63cdB4137aBF6F86cfa661E01d9f4D862504e703",
      "txHash": "0x7ec2de96fd1b8f5bff86038281a4900f52ae1f225985284ddb32e0629b4630c8",
      "kind": "transparent"
    },
    {
      "address": "0x6B3bB1ccb8E6C164D9e00CBC8A95Bc69A3A1a8DA",
      "txHash": "0x9041bca253f31fb731db2c926a634367080f361f774046c9794fb9cf39ce3e1d",
      "kind": "transparent"
    },
    {
      "address": "0x04091AF1fab240f0b0fba76f81B65A137C53a4a9",
      "txHash": "0x553d3cd2683b5b9100af8fd1852e0ddacfe67c786e35e64101894b124ce49daa",
      "kind": "transparent"
    },
    {
      "address": "0x5BcE0Fed84B5311aF0Ed88aeBEC4aFEDA42d5cb2",
      "txHash": "0xe052d2034cadb3e2378ed4560d8ae589171a67214a02f6351a53892d08996542",
      "kind": "transparent"
    },
    {
      "address": "0x4FA225a39E099350eF1305b796A8f57F7e588264",
      "txHash": "0x10a1e01fef2dd06ebed725f78d043263006639815f566685d51f7796a95a3fd1",
      "kind": "transparent"
    },
    {
      "address": "0x9dC8ce2Fa4d089157108013BBB9E67084df48027",
      "txHash": "0xa541a7869943cb9f6bb77094084c8d5561969c78a05bb6ac40f46d19f1acbd8d",
      "kind": "transparent"
    },
    {
      "address": "0x495f23966fcB4b5B18722A1DE6EB01A921C25Ee3",
      "txHash": "0xf1d4c22a07db97aaf8b75fb58279150b937ccd1b04a7e8debaa3e42b0825c53a",
      "kind": "transparent"
    },
    {
      "address": "0x48De19bD897b087773Ba45b41ed79E1bA04Ae68F",
      "txHash": "0xc582678b5bef81e0960b4b4067ceec73cfbe407450d1171f9950aa948848d3f0",
      "kind": "transparent"
    },
    {
      "address": "0x20A4d9Ea878eB862D8be3b169E2B23b4f5A498Ff",
      "txHash": "0xe968cfd76d7a900d971beb756a757be05fe4fe3c77e55725f1d5ec91d48c053d",
      "kind": "transparent"
    },
    {
      "address": "0xb7c2fD2Fe21b1573Dc6b52fDe5684fFDCc5B08d8",
      "txHash": "0x6ab8c377930c4c5f51b4785f808a34116941d9ff30efcf5c21467aa4375bd9a8",
      "kind": "transparent"
    },
    {
      "address": "0xFD18E0119C18708447cce8CDBef6dcD1cB212bd1",
      "txHash": "0x8a2c192846e8f95fab34b54e86b36644c4d35d755fc380f9baf3baf98d9b948f",
      "kind": "transparent"
    },
    {
      "address": "0x334A7e34e1bb4FC6Ae0479Ddc80eC2F80f8beEb1",
      "txHash": "0x086f54b9b2815213f37e512cf60702329f95ed368a889b0f907c48036c038db4",
      "kind": "transparent"
    },
    {
      "address": "0x221839B2468Db189A532F71561Bbf42CeAe33Fe1",
      "txHash": "0x8e35cb809f782d2a4bea88d033aee22c55eafdad5246b8553e3c87c88f45f3b2",
      "kind": "transparent"
    },
    {
      "address": "0xeEBC1d3226f0000f321475C7fC1b36dFA42Aa423",
      "txHash": "0x4d2f620e86e29040e7979223efead65b5e162d94b15a1540c3d1a0c95789d83e",
      "kind": "transparent"
    },
    {
      "address": "0x28D146894c3eA2ee55BC3438de74cfe97e0e8bEb",
      "txHash": "0x82095418a30a0a5693c6e50ac7338e9e82e3f7d758b671e328bfbd6e8b614c01",
      "kind": "transparent"
    },
    {
      "address": "0x3d174BFC2B1ffEE2ef1f5612C48f5e1739645846",
      "txHash": "0xcc671c17414cab88a59999480be95a5deb05abd2f985f532a860c875719cbe3d",
      "kind": "transparent"
    },
    {
      "address": "0xaD23b8992e3Ea927ccF2CA857A005BC3329f3C1a",
      "txHash": "0x1644cd12af18e4f5a673d28fcbbdf9f37fbe76baf5fa7dbdaded39f7339a6c0d",
      "kind": "transparent"
    },
    {
      "address": "0x9b1127DC431D2F042721Fb216739b48593c5001f",
      "txHash": "0x278de9313b3e2d81620a827411a4cf6b7805caaf007ef9672e30c71042a66781",
      "kind": "transparent"
    },
    {
      "address": "0xe70f97eA6AEf094659aE6E38F7315bE271a998d5",
      "txHash": "0x407e80a072ff0e4403bb6ac60b857335b5d6344976d5ec76e43c5a9577f5cd41",
      "kind": "transparent"
    },
    {
      "address": "0x91853b8C2fC168f7C005FF6122e2BcDd6d8fEDBF",
      "txHash": "0x2a757a84a3f8dcb6f58cd4e3c405463854eebdf23ccbcb10b0cebca0886760d3",
      "kind": "transparent"
    },
    {
      "address": "0x95039e7354303Be2700b69cFD8051a900645E893",
      "txHash": "0x6b8879f32ca36f4d514d026074bbee9e7aa9c475ff1350a1efc9f135eddc4292",
      "kind": "transparent"
    },
    {
      "address": "0xb029BadB2C222E7FBf18D95AEa2ceC483A2a289D",
      "txHash": "0x83ec96ebaa427572a21120b090c5d037b00046db9204461d3d8a219df5642795",
      "kind": "transparent"
    },
    {
      "address": "0x69124096034E3b401dECD223D95958d01Af4614c",
      "txHash": "0xe0d4be1bc69f15a428102192e57512fc1a2f2b739daefe3c2343a5d1d6ea9c49",
      "kind": "transparent"
    },
    {
      "address": "0x09b6457B3cb9086Ed6E245E07ceCc07DF3B27DEf",
      "txHash": "0x27d0f94bd2615617759bf115086714d45a08c4940a630b5962b51f88dc8e4556",
      "kind": "transparent"
    },
    {
      "address": "0x2fE4E10652448957862CD85fee9b94aD80F07273",
      "txHash": "0x292f10aef8978362f23179e81a99595d7b7c21a5aeda518332222e7deaee0b0b",
      "kind": "transparent"
    },
    {
      "address": "0xEF20086D9F22C10aB5573Bc877A463C2f9CeEE15",
      "txHash": "0x88080e8eadfc470b8eb9b19b6de184006f4e8afdcb9cc30513aa113d8a8383d9",
      "kind": "transparent"
    },
    {
      "address": "0x34D7Ab2Ba320a474E6a5b283e1591cA718aDe05F",
      "txHash": "0x16be76cf5f9895071b585fedc74dedb41994e8df3a5f0932f45e98015b48aa7d",
      "kind": "transparent"
    },
    {
      "address": "0xf143627086Ed687205672AAA6C2d992770b4F3c2",
      "txHash": "0x61003ebc55a6a185bb3a7748f8d60bd54d137dcbccde93842642abee824574f7",
      "kind": "transparent"
    },
    {
      "address": "0x2Fe4e4f9dC71572d1fD98335D11Bec1282d452E1",
      "txHash": "0x82745ffb20c8d6a7175a921047cfb51ccb307e74a3ae54f8daf2667bcd61dc41",
      "kind": "transparent"
    },
    {
      "address": "0x41fB16904fCc4235613bE5ABba3B17d971608bdc",
      "txHash": "0x0e4347cda84d5f9735f806d5fa991ea40511202e2d218c13ab2851fa86f7c1f9",
      "kind": "transparent"
    },
    {
      "address": "0x1b0A44f5520C25fCa5ce7A49D4184A37655cE962",
      "txHash": "0x9b925c684e845c09cd88f76bed278ac4e3e8f186844ad3301053aa7668b89aaa",
      "kind": "transparent"
    },
    {
      "address": "0x30484774c62D327C8EecD73376d15DC6533E4990",
      "txHash": "0xffed014b74a093ed23498ff11df839c85783e18659da2f29036396fdd0d54625",
      "kind": "transparent"
    },
    {
      "address": "0x93defa78EA14B80B1C32f5e65F3384f52a39B42A",
      "txHash": "0x141bd1b7f86ceb7cb6e61a941c487773d3c22433c4f806e23aa4835071cf26e6",
      "kind": "transparent"
    },
    {
      "address": "0x60018cc3e469c76fbAD3Fa72A021F02166D9F5f4",
      "txHash": "0x5a74606eac516844573e95cbdad73d675e4ac0fcc1cbde67056e2bdff27ad1b4",
      "kind": "transparent"
    },
    {
      "address": "0xDCecf6b013B5AFE6e1D724C47CFe0FEE2D4DF6C6",
      "txHash": "0x183fad307cf02286b399d4997e959d32aa003bef382269bcfefa5ab218148de9",
      "kind": "transparent"
    },
    {
      "address": "0x954923a493be3294d25AEE819004b38fe187ad1F",
      "txHash": "0xeeef03120be292ee4b6dabf66b1397b1db4cd1d03b451cd63a8104e5b7bb5458",
      "kind": "transparent"
    },
    {
      "address": "0x69059Ae6Ced9d6EDC52B18dC3fE6078B351Cf0bc",
      "txHash": "0x3843cad790f6baf9e878c5a8e6df8a9a47f568101cf6e15e6dc24353730c81f9",
      "kind": "transparent"
    },
    {
      "address": "0x46b0F1c3C3F483d87dAb6E24dBB6e5b5D31b33Ba",
      "txHash": "0xedbead8c31faf83dc584d34cfa6a5cd9e452fec9e8eb7e6a70ef6fe4bf41e022",
      "kind": "transparent"
    },
    {
      "address": "0x280B6781E9Edf978C1b5b28253A9bF2dD172a1AD",
      "txHash": "0x72c659055887a0f3f5ef29be53515a372b1388ed72a4ea956c2cddf70ce7a5fd",
      "kind": "transparent"
    },
    {
      "address": "0xcc436A312eB1d14ad07061F014bd67580e0cDEEE",
      "txHash": "0xb6cd6dd603de7d877f24c2421ef341f716a93d167033b5b5839f45ce64026dbe",
      "kind": "transparent"
    },
    {
      "address": "0x5133D24fFEA5a50EAAC35C691eED8af8C9e0b6Fa",
      "txHash": "0xed14b5cfd132c91d28ec33e1dff9edfe5046c54809e1d3f6d39baf43f8e889ad",
      "kind": "transparent"
    },
    {
      "address": "0xE10Ff79B907e297C4b0441588988ebe196695965",
      "txHash": "0x906da7450d576b73062169ea903e531715546f4b2ef0dc3668084fceb7632228",
      "kind": "transparent"
    },
    {
      "address": "0x58BefAFd3456BEc202EC579336aF64223e3CF741",
      "txHash": "0x1265ff19cdedfc5ac5545127fde8d72a00831d81b385007e35f2ed83d1e3d1ef",
      "kind": "transparent"
    },
    {
      "address": "0x582515B209D2C05048c289C755094224cd80B7f5",
      "txHash": "0x6d25ae542be2baeb334846cca656e4665e739e2e1b96111357a4e301f4f42535",
      "kind": "transparent"
    },
    {
      "address": "0xc6fefc57bB4A8C5AFAa7171ED8433F2E453c835e",
      "txHash": "0x466e1b6bfa55b18f9c9f315ac82b8656ed9ae428ee1519b9b59972811530a7a0",
      "kind": "transparent"
    },
    {
      "address": "0x99A30F681E50163aBb8F741ccDe4AeBfe6c3CED2",
      "txHash": "0xda65eb7ac7399945ec0fc01b7ba952010eba20d9761457b2ac0930cd3f8e446c",
      "kind": "transparent"
    },
    {
      "address": "0x79aBb2a2DE1565F7DEC99DcB3E9445CF06845590",
      "txHash": "0xaf0c1ea01b4f2d266065eb77e336891b86ce259c6713e2cc9bcaa09954cdc983",
      "kind": "transparent"
    },
    {
      "address": "0x1f7beBe1870159Cfb8377C0f8c56891E7f5daf19",
      "txHash": "0x5da049e0769b94fbb84c268c2065a54e0a8a3a17aa9241bdfd725380ca91bdce",
      "kind": "transparent"
    },
    {
      "address": "0x205a3726F31F3F190051ED094244571154C65045",
      "txHash": "0xfaf1223e9ac24f3b8757e58317d8950ef059d133fefdcb091b5a0d64fc830aba",
      "kind": "transparent"
    },
    {
      "address": "0xb773AD12Bb562C615bc1904c1F040d1451602ff2",
      "txHash": "0xdac9b116b728176aa8b5d3d113cc5567d2e0004d308a693df73b6e42c0cb0e75",
      "kind": "transparent"
    },
    {
      "address": "0x169f5f7AeD3782D9778495ae149eD8213F0D0dDc",
      "txHash": "0x86b3e52554ed664179c70b4a7fd06cfe25621b93fd6034064366b1a06b0ac774",
      "kind": "transparent"
    },
    {
      "address": "0x9604bBDf032756b1966a357Eead04A6baB642c90",
      "txHash": "0x5cd8b31636276259f1aac52b13fd2fe5d49903294517ec7f55044fb7f6603ccd",
      "kind": "transparent"
    },
    {
      "address": "0x10A48520932c37299D4A4f8De4e751636a7A768c",
      "txHash": "0x3aa28cbf3c516018aa049d6f0b6c7eaef554e566be64113ad5e3d119d1a526ae",
      "kind": "transparent"
    },
    {
      "address": "0xAd223243f8C2b9fa96fc6c3565b84522fa0C3459",
      "txHash": "0xf9fc1e09d0127926c6561746b2dda6f4ddc540f57e090cf3da200c368eb509e2",
      "kind": "transparent"
    },
    {
      "address": "0x6a6a7B704087Bd56D4c3427780a7040755AB35CB",
      "txHash": "0x6f5f086b9dc951c71b1255ec3c057303788b10ce6583ba22a55da30a45f744aa",
      "kind": "transparent"
    },
    {
      "address": "0x151340a033f7ADE04Db37472FBB2161C4B5f613E",
      "txHash": "0x318ff764de122199aac16a761e17faa4d969afb2d53685df6e06cd53c2645d47",
      "kind": "transparent"
    },
    {
      "address": "0x7420a1a1B388001C3c5EE7AB2535f046E696f9e9",
      "txHash": "0x1044c806088ee13b6ea671930353bf8b499d06622e37c9e10567451ad0394308",
      "kind": "transparent"
    },
    {
      "address": "0xD6B7Dcc20F74fA81545eA4d2C551083211C5b5B4",
      "txHash": "0xea6eafae1a3236e266c990adc649c05b783e07667322a87460616b45723b1589",
      "kind": "transparent"
    },
    {
      "address": "0xE5A8218D1bA57a3928715A133E481966c83bBc1F",
      "txHash": "0x32e45bb1bb1b9da3a37d66850ce0fa4e0a1a619bcd221179b15b7ab00b9b3f5f",
      "kind": "transparent"
    },
    {
      "address": "0x128E504F017f6d7556E6a692e7b5D0bf3d739901",
      "txHash": "0xc91361a20fe95e0fdc08054fca51db5e058fdf43073a49ad0982465da6aff4d5",
      "kind": "transparent"
    },
    {
      "address": "0xe5a93244BeaFc9D91E83fc39719804F4AAeaA293",
      "txHash": "0x22fb979b48c1eab896cad0ddf26e425c1591edb9d13b88a1e085c0ba8bcecd74",
      "kind": "transparent"
    },
    {
      "address": "0xeDddC6ea799EFf3b6040F7DC2653575b705D2Cd9",
      "txHash": "0xb811dee8f338e5a999eec8643690e7f667d5fab2f69321879f80e35398faab4c",
      "kind": "transparent"
    },
    {
      "address": "0x9845860E83c0a310C29A3fd7aC8F0D39615a32A5",
      "txHash": "0x97133656defbc629ce09388ea4e2b69d143888c5ab49fa7df0c8631f419a4e7a",
      "kind": "transparent"
    },
    {
      "address": "0xd0e176FB269dE7E4324aC6736beB43873eFC7e6D",
      "txHash": "0x5859c579ca09f4237be3bf9048880e7edf24a29ceb3c4df4af3fcdc916d29f73",
      "kind": "transparent"
    },
    {
      "address": "0x00114799569596d2B5EBf1E9B6dB1B3483647d31",
      "txHash": "0x5a991e2e8731ebb0b6da089e0bf68453f09102905db7c6d3f8664fddfb48f305",
      "kind": "transparent"
    },
    {
      "address": "0x24CB9d5265cF42E33AE3F03CaCf7400C1EfB984e",
      "txHash": "0x56c8f858ce1d5cb7b56b19a4d04bbb23ffe5c78ec45a19e52b67b85da930836e",
      "kind": "transparent"
    },
    {
      "address": "0xeeB510E3b4F53C42808a3430CA7BfA4A893298Fe",
      "txHash": "0x1c9a6ecf3bb61afd711b165a778b8241703e1d3fbced9177746ab929153c5a4c",
      "kind": "transparent"
    },
    {
      "address": "0xE8aC4D2d9C08457286DA5E7e18E222D9591C7E59",
      "txHash": "0x5a2f5caaaef8203b40f42ac4acab15b073081a11d0f4bf6f333b3ecdd00c8266",
      "kind": "transparent"
    },
    {
      "address": "0xBbdBB1180bD16F5B3bb18906E074B6B715413c94",
      "txHash": "0x2047f07f40e35eed2803b028294332a8ac062b33004bf8e80057100a05117922",
      "kind": "transparent"
    },
    {
      "address": "0x4b79a8010Bef8740F4Dc36cb5E2C15DAFc9DcA8E",
      "txHash": "0x2b3f5e908e376aaf2cd3c2b71f49e3eacbc9e9f3d09fbecf12e1c6244ac64995",
      "kind": "transparent"
    },
    {
      "address": "0x2404eF9EF229686c66bb9a99a6fb56Fb584Ee6eD",
      "txHash": "0x6689ecc6b15612d83a01a05c32c076750990727735e428e7fba3842cb42c9ed5",
      "kind": "transparent"
    },
    {
      "address": "0x7CC4d2aA7a754150463b18099D108B9E17Da6A1e",
      "txHash": "0x511d8544392711f87c3415b0a69c04c880b1fcdd6cf18f4328198439be4404fb",
      "kind": "transparent"
    },
    {
      "address": "0x2F4Af0FE50cc2A2c297775050dB7DA8af7B660Df",
      "txHash": "0x6f582fae025c0ec7942167d5396a83bee8f207ed9cda25465a91ac2fcf1ada02",
      "kind": "transparent"
    },
    {
      "address": "0xaFdc3e3FE7E6977E4e252B106169de076028b70A",
      "txHash": "0x41c0ac00c5c7ee6d96b73b4a05d544124bcd5794abf62305a2a16747c74a805e",
      "kind": "transparent"
    },
    {
      "address": "0x63c02848bb2D69C6dC7C589817F695dc43297c16",
      "txHash": "0x001294e80e9e47f404dc938a6c4de4ff7bcd92cc417de20a3b89446ba1970405",
      "kind": "transparent"
    },
    {
      "address": "0xc83D4Ad30D3feb275F36759cb3A002797cf91181",
      "txHash": "0xee7b0364ef08616c1c03499fa925d5f1a27fc7c21155fd0e5bce00cbe6e0efb7",
      "kind": "transparent"
    },
    {
      "address": "0xAf7e93Dd3b710b8E4Fde7Db9899C3DED77d06f18",
      "txHash": "0xc25f17ab267fc041e8b76b657ee855f8fd68fcd8c71abd72f4c14e0dd0bcfd0a",
      "kind": "transparent"
    },
    {
      "address": "0x3a1a511DFE03E92f7943E00892EAd5daF7CCd20F",
      "txHash": "0x4064d63d54bffa25e35b7fbfe6fb0067c5911ca6ee0a7487988f14bf6f377ca4",
      "kind": "transparent"
    },
    {
      "address": "0x34AB430b509cb9AC634f88945A55214B7C97b59A",
      "txHash": "0xe0be8de3979bffd528ee8a466c18a6772bcbe48a69cc60be5d2e23730c88bb8c",
      "kind": "transparent"
    },
    {
      "address": "0xb2e3e7E47DC944cA8Efd20286f672E440d95e3c0",
      "txHash": "0x1df9b9d9a839546e95548ba8d7618c52a8dee143f30fae03b998257020201299",
      "kind": "transparent"
    },
    {
      "address": "0x3c909eD7500eCbE4e72AD89127B92A7A25d5d3A6",
      "txHash": "0xf2c7ecfe1478ca3098d3df04821eeb860a8c40ae8c5e18e37c656baeefdeab19",
      "kind": "transparent"
    },
    {
      "address": "0xf50b5e37952A97bBb52a3a90BF466052be4371D7",
      "txHash": "0x778c3d7bb6046cdd1c4e02c8233adc365855b67d6b8f2165be309d93eb6aac9c",
      "kind": "transparent"
    },
    {
      "address": "0x04cEfb3fcFe69a17fcc0271b234e7154347B3b53",
      "txHash": "0x2351c2d0d9a3a01d46e0f599ea1a4da49a2f8319c1b40922673f047b55577f63",
      "kind": "transparent"
    },
    {
      "address": "0x914b3269FF13E879cd40795a361258FB680733Bd",
      "txHash": "0xa940dfeddb4c7f7ffb000a26ccc3512c11b6ee1fb6d03de8244dff1dc3d51607",
      "kind": "transparent"
    },
    {
      "address": "0x8f6B44d7FC5d705Ac72e57005f0452Dc97E5b814",
      "txHash": "0xa1355fedb783afdc75b157296f0973caaae4049928ee779392e7294bfc30ca4b",
      "kind": "transparent"
    },
    {
      "address": "0xB3E25237276Cd5600460E41dB402f774f635EB88",
      "txHash": "0xe12dd7a5650edf733ecabb6121964e70b3535cc5a81af6497e77f80a378362d9",
      "kind": "transparent"
    },
    {
      "address": "0xE91d44794D4aaE35e6847Aa6c08D62351BA18251",
      "txHash": "0x868442b5b383cbb0cee9cb831215d01ca99302a07cbe556f80439ebfe7ebf450",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8f8678327df1614889cc3bb13be8ead344d47b4a6df2ff8150fef77653f63b05": {
      "address": "0xd5f4905aF086a8EE2C2b22c587D9f7B3F8D8F512",
      "txHash": "0x149077a258f642f2e2ecb2cf6a1fafcaccf009979f929d5726f4dc382546e978",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)7257",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:19"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:21"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)7257": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "80ee181413aa6e85553ae387e5b3bfe02b674fb98076611df5bea422b365cdd7": {
      "address": "0xc9b68E1A09740095b3f6b6bF7daCb19F413299db",
      "txHash": "0x62a8cb3abe084080bb10599f2d8f6145ef8537c0ae5c67f47816f3d44fc4abc2",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "poolEnabled",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:15"
          },
          {
            "label": "chainIdToBridgeReceiver",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:17"
          },
          {
            "label": "chainIdToMessageReceiver",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:19"
          },
          {
            "label": "chainIdToSpokePoolAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:21"
          },
          {
            "label": "chainIdToRouter",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:23"
          },
          {
            "label": "chainIdToLinkAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:25"
          },
          {
            "label": "chainIdToSelector",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint64)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:27"
          },
          {
            "label": "chainIdToUmaAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:29"
          },
          {
            "label": "hashedProtocolToEnabled",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:31"
          },
          {
            "label": "hashToProtocol",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:33"
          },
          {
            "label": "poolCountToPool",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:35"
          },
          {
            "label": "poolAddressToBroker",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:37"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:39"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:41"
          },
          {
            "label": "receiverAddress",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:43"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:45"
          },
          {
            "label": "arbitrationContract",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:47"
          },
          {
            "label": "investmentStrategyContract",
            "offset": 0,
            "slot": "118",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:49"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:51"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:53"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "121",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "01f750a920faf1ca830b23025c43e254578f09492638b773cf7b09b22c704d74": {
      "address": "0x9553d4559b8E914aC98C7DC169DD35F7578626Cb",
      "txHash": "0xba90a9443b4719424d163f74140606715ff35745018d589eb0fd18ac474c988d",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "depositIdToDepositor",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:12"
          },
          {
            "label": "depositIdToDepositAmount",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:13"
          },
          {
            "label": "depositIdToTokensMinted",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:14"
          },
          {
            "label": "depositIdToPoolTokenSupply",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:15"
          },
          {
            "label": "poolToPendingDeposits",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:16"
          },
          {
            "label": "withdrawIdToDepositor",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:18"
          },
          {
            "label": "withdrawIdToAmount",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:19"
          },
          {
            "label": "withdrawIdToUserPoolTokens",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:20"
          },
          {
            "label": "withdrawIdToTokensBurned",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:21"
          },
          {
            "label": "poolToPendingWithdraws",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:22"
          },
          {
            "label": "poolDepositNonce",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:24"
          },
          {
            "label": "poolWithdrawNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:25"
          },
          {
            "label": "poolPivotNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:26"
          },
          {
            "label": "poolToPivotPending",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:27"
          },
          {
            "label": "poolToUserPendingWithdraw",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:29"
          },
          {
            "label": "poolToUserPendingDeposit",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:31"
          },
          {
            "label": "targetPositionMarketId",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:34"
          },
          {
            "label": "targetPositionChain",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:35"
          },
          {
            "label": "targetPositionProtocolHash",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:36"
          },
          {
            "label": "targetPositionProtocol",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_address,t_string_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:37"
          },
          {
            "label": "currentPositionAddress",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:39"
          },
          {
            "label": "currentPositionMarketId",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:40"
          },
          {
            "label": "currentPositionProtocolHash",
            "offset": 0,
            "slot": "123",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:41"
          },
          {
            "label": "currentPositionProtocol",
            "offset": 0,
            "slot": "124",
            "type": "t_mapping(t_address,t_string_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:42"
          },
          {
            "label": "currentRecordPositionValue",
            "offset": 0,
            "slot": "125",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:43"
          },
          {
            "label": "currentPositionValueTimestamp",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:44"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "127",
            "type": "t_contract(IChaserRegistry)8663",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)8663": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes_storage)": {
            "label": "mapping(address => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ddb92ef57dac0d87fb454a0ae81531ded57ddce57bb24648bd39a30fb09632cf": {
      "address": "0x46D2336e57cB9b2B5729B28Ff6970af0e8C7B205",
      "txHash": "0x5861fa782c9c7cdea3ac22c5f13c3ae09f7bb83252e042dae596c763adeb5c65",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:19"
          },
          {
            "label": "localChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:20"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IChaserRegistry)9154",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:22"
          },
          {
            "label": "messenger",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserMessenger)8928",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:23"
          },
          {
            "label": "bridgeReceiverAddress",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:25"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:26"
          },
          {
            "label": "poolToCurrentPositionMarket",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:28"
          },
          {
            "label": "poolToCurrentProtocolHash",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:29"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:30"
          },
          {
            "label": "userDepositNonce",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:31"
          },
          {
            "label": "userCumulativeDeposits",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:32"
          },
          {
            "label": "poolAddressToDepositNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:33"
          },
          {
            "label": "poolAddressToWithdrawNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:34"
          },
          {
            "label": "poolInitialized",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:35"
          },
          {
            "label": "poolToNonceToCumulativeDeposits",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:36"
          },
          {
            "label": "poolToNonceToCumulativeWithdraw",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserMessenger)8928": {
            "label": "contract IChaserMessenger",
            "numberOfBytes": "20"
          },
          "t_contract(IChaserRegistry)9154": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7fbe76a01eae3bdb31f6dd578dd8a8ad9b57c4e0381ad681841ef5f32043dfd0": {
      "address": "0x65Af89520e5ADCe64A55E9dd894e7faC8bb32987",
      "txHash": "0x58694c0a4ad67b210f983c8acef6c85a2e6b98bb4b678c269a2b400143b35cf0",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bridgeLogic",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IBridgeLogic)5686",
            "contract": "BridgeReceiver",
            "src": "contracts/BridgeReceiver.sol:13"
          },
          {
            "label": "spokePoolAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "BridgeReceiver",
            "src": "contracts/BridgeReceiver.sol:14"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeReceiver",
            "src": "contracts/BridgeReceiver.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBridgeLogic)5686": {
            "label": "contract IBridgeLogic",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "da3bb595753877da5e8607c81bb4476f014a3ce7822668f9c34f9bf3028d3925": {
      "address": "0x6DEC68E47bB1A1137015781F5C36D5516d8523D2",
      "txHash": "0xa1b4be2c5d2dba1c65c478b0ea0759c3918ced0860061a48732916d782f55876",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:16"
          },
          {
            "label": "registryAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:17"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "de8a7872b712d21032aad9a2ea8d26be5bf4415dd9397a947ef4b47110638dd2": {
      "address": "0x9B767cBf77f42d5416F45D2Cc536a158D1Bd03be",
      "txHash": "0x8de80c6fefa1bfe4e24c24d73265eb59e04c5983b5880b77ec6e34334ed72042",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)1887",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)1841",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "chainIdToName",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)829_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)1841": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)1887": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)829_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)829_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f612019b3af0fa766585828dd2e7dae089e2f75de80800934eb2528d3951da61": {
      "address": "0xf6df1f9D713262c48111526D518BA78727A7290F",
      "txHash": "0x04e22a8c0b2354891f16138c5d6c232e12b272c1898948b7fb35c9aaf557ba67",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "poolEnabled",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:15"
          },
          {
            "label": "chainIdToBridgeReceiver",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:17"
          },
          {
            "label": "chainIdToMessageReceiver",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:19"
          },
          {
            "label": "chainIdToSpokePoolAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:21"
          },
          {
            "label": "chainIdToRouter",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:23"
          },
          {
            "label": "chainIdToLinkAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:25"
          },
          {
            "label": "chainIdToSelector",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint64)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:27"
          },
          {
            "label": "chainIdToUmaAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:29"
          },
          {
            "label": "hashedProtocolToEnabled",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:31"
          },
          {
            "label": "hashToProtocol",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:33"
          },
          {
            "label": "poolCountToPool",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:35"
          },
          {
            "label": "poolAddressToBroker",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:37"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:39"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:41"
          },
          {
            "label": "receiverAddress",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:43"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:45"
          },
          {
            "label": "arbitrationContract",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:47"
          },
          {
            "label": "investmentStrategyContract",
            "offset": 0,
            "slot": "118",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:49"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:51"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:53"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "121",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3aff47ac50c77f2d9fda7cdbbf2241ebc53a70739f23ca9ff24aacf9fbd8e142": {
      "address": "0xA59E0CF025C9A474D83F9b4Aafc764ef285e02df",
      "txHash": "0xda63f556a60608169af7c0cd36fb571fe1ecde481965855578a1de321f8d95d4",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)7039",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:19"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:21"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)7039": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "88c80fa8c78b29050d72e23f51da8dc893bb7af6e2817f6ab86c851be83d0dd5": {
      "address": "0x2E32d4B3da0bf467C698A40928D86E3718F90B7B",
      "txHash": "0x74b01855ffa52b1d9c45940a098abcf55b6d6c0a15a81b664bca16b342110b60",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "poolEnabled",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:15"
          },
          {
            "label": "chainIdToBridgeReceiver",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:17"
          },
          {
            "label": "chainIdToMessageReceiver",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:19"
          },
          {
            "label": "chainIdToSpokePoolAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:21"
          },
          {
            "label": "chainIdToRouter",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:23"
          },
          {
            "label": "chainIdToLinkAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:25"
          },
          {
            "label": "chainIdToSelector",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint64)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:27"
          },
          {
            "label": "chainIdToUmaAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:29"
          },
          {
            "label": "hashedProtocolToEnabled",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:31"
          },
          {
            "label": "hashToProtocol",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:33"
          },
          {
            "label": "poolCountToPool",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:35"
          },
          {
            "label": "poolAddressToBroker",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:37"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:39"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 0,
            "slot": "114",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:41"
          },
          {
            "label": "receiverAddress",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:43"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:45"
          },
          {
            "label": "arbitrationContract",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:47"
          },
          {
            "label": "investmentStrategyContract",
            "offset": 0,
            "slot": "118",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:49"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "119",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:51"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "120",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:53"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "121",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:55"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e37d561bacd431c7f697e6254cf0d9b40ff7a15f1ea4f50c021c51a95d54c651": {
      "address": "0x9debE6A86898d49f42f2ce752145f05aeFa10aa2",
      "txHash": "0xb068cf74c4e872649f57ec313b0684212780a2b7809ddf291a72ffcd90b62a96",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)7101",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:22"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:24"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)7101": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "cc394947698929ec24c3ade9f454f07ba903dd48c80ed94d1ca1d972f56185c2": {
      "address": "0xA2b38EB54E882456F6C42BB0bFf95Dd237398463",
      "txHash": "0x8e9fc6d8dcc6ae63581d7254426240278fdfd9b0d8f0b50c584d0715e6fdfd91",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "poolEnabled",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:15"
          },
          {
            "label": "chainIdToBridgeReceiver",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:17"
          },
          {
            "label": "chainIdToMessageReceiver",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:19"
          },
          {
            "label": "chainIdToSpokePoolAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:21"
          },
          {
            "label": "chainIdToRouter",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:23"
          },
          {
            "label": "chainIdToLinkAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:25"
          },
          {
            "label": "chainIdToSelector",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint64)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:27"
          },
          {
            "label": "chainIdToUmaAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:29"
          },
          {
            "label": "chainIdToUniswapFactory",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:31"
          },
          {
            "label": "hashedProtocolToEnabled",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:33"
          },
          {
            "label": "hashToProtocol",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:35"
          },
          {
            "label": "poolCountToPool",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:37"
          },
          {
            "label": "poolAddressToBroker",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:39"
          },
          {
            "label": "addressUSDC",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:41"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:43"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:45"
          },
          {
            "label": "receiverAddress",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:47"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "118",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:49"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "119",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:51"
          },
          {
            "label": "uniswapFactory",
            "offset": 0,
            "slot": "120",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:53"
          },
          {
            "label": "arbitrationContract",
            "offset": 0,
            "slot": "121",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:55"
          },
          {
            "label": "investmentStrategyContract",
            "offset": 0,
            "slot": "122",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:57"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:59"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "124",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:61"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "125",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1c8afd650031ed9ce83c1f6993c846124bcabb2e4a1b0b8d778f2011cb110389": {
      "address": "0x9489e9E47945de4b5e140cF1E2427f76b0e33613",
      "txHash": "0x5f18ac41a3c005c95a262a32c6fdbe6a7b166a8a3c86fee7c9ddec4d2462f6e5",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "protocolFeePct",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:12"
          },
          {
            "label": "depositIdToDepositor",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:14"
          },
          {
            "label": "depositIdToDepositAmount",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:15"
          },
          {
            "label": "depositIdToTokensMinted",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:16"
          },
          {
            "label": "depositIdToPoolTokenSupply",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:17"
          },
          {
            "label": "poolToPendingDeposits",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:18"
          },
          {
            "label": "withdrawIdToDepositor",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:20"
          },
          {
            "label": "withdrawIdToAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:21"
          },
          {
            "label": "withdrawIdToUserPoolTokens",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:22"
          },
          {
            "label": "withdrawIdToTokensBurned",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:23"
          },
          {
            "label": "poolToPendingWithdraws",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:24"
          },
          {
            "label": "poolDepositNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:26"
          },
          {
            "label": "poolWithdrawNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:27"
          },
          {
            "label": "poolPivotNonce",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:28"
          },
          {
            "label": "poolToPivotPending",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:29"
          },
          {
            "label": "poolToUserPendingWithdraw",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:31"
          },
          {
            "label": "poolToUserPendingDeposit",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:33"
          },
          {
            "label": "targetPositionMarketId",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:36"
          },
          {
            "label": "targetPositionChain",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:37"
          },
          {
            "label": "targetPositionProtocolHash",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:38"
          },
          {
            "label": "targetPositionProtocol",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_address,t_string_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:39"
          },
          {
            "label": "currentPositionAddress",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:41"
          },
          {
            "label": "currentPositionMarketId",
            "offset": 0,
            "slot": "123",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:42"
          },
          {
            "label": "currentPositionProtocolHash",
            "offset": 0,
            "slot": "124",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:43"
          },
          {
            "label": "currentPositionProtocol",
            "offset": 0,
            "slot": "125",
            "type": "t_mapping(t_address,t_string_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:44"
          },
          {
            "label": "currentRecordPositionValue",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:45"
          },
          {
            "label": "currentPositionValueTimestamp",
            "offset": 0,
            "slot": "127",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:46"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "128",
            "type": "t_contract(IChaserRegistry)14294",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)14294": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes_storage)": {
            "label": "mapping(address => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "987a8c78715be88eb7cb805f52e1035d39a66325e6cb859d629964ebcb526c63": {
      "address": "0xC629aC05d3C963d09Ff458e25D38904BF7222947",
      "txHash": "0x123a9e99b7ae563fba29d489e0a63dde5ba9475767393d05af3d8fac90a356ef",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:23"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:24"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IChaserRegistry)14294",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:26"
          },
          {
            "label": "messenger",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserMessenger)14051",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:27"
          },
          {
            "label": "bridgeReceiverAddress",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:29"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:30"
          },
          {
            "label": "poolToCurrentPositionMarket",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:32"
          },
          {
            "label": "poolToCurrentProtocolHash",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:33"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:34"
          },
          {
            "label": "userDepositNonce",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:35"
          },
          {
            "label": "userCumulativeDeposits",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:36"
          },
          {
            "label": "poolAddressToDepositNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:37"
          },
          {
            "label": "poolAddressToWithdrawNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:38"
          },
          {
            "label": "poolToDepositNonceAtEntrance",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:39"
          },
          {
            "label": "poolToWithdrawNonceAtEntrance",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:40"
          },
          {
            "label": "poolInitialized",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:41"
          },
          {
            "label": "poolToNonceToCumulativeDeposits",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:42"
          },
          {
            "label": "poolToNonceToCumulativeWithdraw",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserMessenger)14051": {
            "label": "contract IChaserMessenger",
            "numberOfBytes": "20"
          },
          "t_contract(IChaserRegistry)14294": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1b8a69cf2ae51b37b60487f508d6dc10ca3e6d166afb5f7b2fef818393e2fe40": {
      "address": "0x04f7AFaA555E873676bCE0Ac50e169477309c365",
      "txHash": "0x05454b7f892acd2cb1f50c48c35c7115354f6fcf4e504aafcfda125cf814ba42",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)6243",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:22"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:24"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)6243": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0b53d0c2209d160b3ae7580041c2ed387e0f34351b12da1e10a2db6b376672f0": {
      "address": "0x66617d78f5AD10d2e5C5Adc92aAE008718579773",
      "txHash": "0x5a4acbd77573c7fbc9d75fa236d2f79bde800a49bcbcea0a4b500fb2d3c4a7a6",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "poolEnabled",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:15"
          },
          {
            "label": "chainIdToBridgeReceiver",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:17"
          },
          {
            "label": "chainIdToMessageReceiver",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:19"
          },
          {
            "label": "chainIdToSpokePoolAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:21"
          },
          {
            "label": "chainIdToRouter",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:23"
          },
          {
            "label": "chainIdToLinkAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:25"
          },
          {
            "label": "chainIdToSelector",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint64)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:27"
          },
          {
            "label": "chainIdToUmaAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:29"
          },
          {
            "label": "chainIdToUniswapFactory",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:31"
          },
          {
            "label": "hashedProtocolToEnabled",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:33"
          },
          {
            "label": "hashToProtocol",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:35"
          },
          {
            "label": "poolCountToPool",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:37"
          },
          {
            "label": "poolAddressToBroker",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:39"
          },
          {
            "label": "addressUSDC",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:41"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:43"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:45"
          },
          {
            "label": "receiverAddress",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:47"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "118",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:49"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "119",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:51"
          },
          {
            "label": "uniswapFactory",
            "offset": 0,
            "slot": "120",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:53"
          },
          {
            "label": "arbitrationContract",
            "offset": 0,
            "slot": "121",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:55"
          },
          {
            "label": "investmentStrategyContract",
            "offset": 0,
            "slot": "122",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:57"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:59"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "124",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:61"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "125",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "15760ec1ad639b035430bb5e5d02e7696f4b1482797a2f7be4ba613990df7ed3": {
      "address": "0x579244f60eD937ec8CC2FfB521B49c1266f1CDeB",
      "txHash": "0x6e70be455e703e8aedf0cc7a7ac1e8ef1df0630efa135720d4e50ba118bec177",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)7147",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)7101",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "chainIdToName",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)2896_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)7101": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)7147": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)2896_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)2896_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8c76fa70a925c2dc818a1665f3366c8eecec97110f96960b257c53a2b89e6460": {
      "address": "0x54fdD420E1D67F3AC4a8BFB07cf7a474d60Ed1CB",
      "txHash": "0xbb7e5e23fce69b1fd56ca77066e513ef1389e7d68b969e6def44bd4ead3c045f",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)1856",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)1810",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "chainIdToName",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)1810": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)1856": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)833_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ff0d7647bcbf146c27165737375d300d2f4ea732cf83450b78e1d1705c359f7e": {
      "address": "0xA141C70FF656AA02F83FA7b623f584a87C6D3c5d",
      "txHash": "0x83b3267a832235f976e4e7b1229b073bda2d6de14c4ea62ccc06e3221debf50b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)1862",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)1816",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "chainIdToName",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)1816": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)1862": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)833_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3d062ea447a629e5e73eb36eaea8e2a79e33ac70fb1aadd9327da7fa8d6633b8": {
      "address": "0xf58695E7c102F49b4B9A036Cd7a3E07f23d9E1D7",
      "txHash": "0x5a6811f7292dd6595953beaf3239b698c7d87236847ed0093dd1119ebbee59b4",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)1882",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)1836",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "chainIdToName",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)1836": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)1882": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)833_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0c2d32d3ca0953a5ad3c7c40d4470820dea512b4013906ae49cb552f8f623bf9": {
      "address": "0x24Eb29c9ba8eF8BE4f11883C1551EBa31D64B32a",
      "txHash": "0x238aeabe85e3d3650ed1166f341981a77e5f9e483c886eb7b6238a4154fcd955",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)1878",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)1832",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "chainIdToName",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)1832": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)1878": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)833_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "320e04e4d7fa7555d3fc5c8083385e685cd5639d80a1b7a6393f0c5e35de6c50": {
      "address": "0x9e31f399966701d93C1D9ff8c37Ee46154327535",
      "txHash": "0x90746d9cfa601f6ce833c23a5fc7592837e08d527bccafe15dd76e5ed0bf1e49",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)1888",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)1842",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "chainIdToName",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)1842": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)1888": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)833_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "65aeea6bf24f011d6bf237c5e261d080a690a4456c71acf28da91b50c8a48bfa": {
      "address": "0xafE98f3475826088A58EB50a4a50B76C2F513Ca7",
      "txHash": "0xe5f7bfac1a6e931265170ba63904655eb3d00e503c57c3989a0f994b75aace51",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)1885",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)1839",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "chainIdToName",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)1839": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)1885": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)833_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "fa210accce636e266ccd311614bc5f47044ce71820a1369fc0e96c14207558d0": {
      "address": "0x037D9d9d954a0b166Cb842eccDA9E522e430012A",
      "txHash": "0xa17f7d9becf1bb73849e7efc408fdb3590bb2476e28a376364a8e828f04e0a5d",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)1873",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)1827",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "chainIdToName",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)1827": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)1873": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)833_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e55fa517e889c313fa39ece491a1d13d7b9ed6c5f1cfcbb82feea5c1a5a4661c": {
      "address": "0x5A9665b8Fb78C6fe8Fc6c4a47302FFD690e344C3",
      "txHash": "0x64147c148b74af84860443b310ee953f65c8a535395851f55d59f68b519ccdf5",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)1880",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)1834",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "chainIdToName",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)1834": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)1880": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)833_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8f3db4855f30cd98c705a013d6cae8a61849003ce2b290a6c34f284023c9a340": {
      "address": "0xAB8C92cf4Df1B5728aE766061ACfF0C061e457C9",
      "txHash": "0x15182adb15c7b7f181a837651e7d821772cffae1c47b0db2ee62aedec19664c5",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)1886",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)1840",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "chainIdToName",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)1840": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)1886": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)833_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)833_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "266a407ccffcfe76795d29f7282f2f0a4d30b674444b64fbb1720a0911f73098": {
      "address": "0xd0163C95A9C1a4628561c89C72BB388b1Ca1Ef26",
      "txHash": "0xc971cdb3a88b7407af06545a47861c7162cf0cf0099f43cd7c2b2d7d59847161",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)6228",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:22"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:24"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)6228": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "570ff74a0e2d43519ec520ad0d723b13037ac9ebca69ead7e3dad9b2c11ed6e1": {
      "address": "0x0a4968b8888CE15fB97fc22B7a3CF8d43d6CA54b",
      "txHash": "0x80322d158406d477a4b9a1c0a0da96446e5790bc86c4a3eb3a8f67e2eeccbbce",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)11321",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:13"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:15"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)11321": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3da415a71ac82a2f9c61ce66a63624fe9d61af845900ecdabe791b2d174649c9": {
      "address": "0x105c307F6BE7E389052bF4F664d82aF491eD93C5",
      "txHash": "0x601a71fbff44022bcb7520b21cbddd7bec6890cd0dcdaacd5cf13d39973e5a90",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "poolEnabled",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:15"
          },
          {
            "label": "chainIdToBridgeReceiver",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:17"
          },
          {
            "label": "chainIdToMessageReceiver",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:19"
          },
          {
            "label": "chainIdToSpokePoolAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:21"
          },
          {
            "label": "chainIdToRouter",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:23"
          },
          {
            "label": "chainIdToLinkAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:25"
          },
          {
            "label": "chainIdToSelector",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint64)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:27"
          },
          {
            "label": "chainIdToUmaAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:29"
          },
          {
            "label": "chainIdToUniswapFactory",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:31"
          },
          {
            "label": "hashedProtocolToEnabled",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:33"
          },
          {
            "label": "hashToProtocol",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:35"
          },
          {
            "label": "poolCountToPool",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:37"
          },
          {
            "label": "poolAddressToBroker",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:39"
          },
          {
            "label": "addressUSDC",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:41"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:43"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:45"
          },
          {
            "label": "receiverAddress",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:47"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "118",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:49"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "119",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:51"
          },
          {
            "label": "uniswapFactory",
            "offset": 0,
            "slot": "120",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:53"
          },
          {
            "label": "arbitrationContract",
            "offset": 0,
            "slot": "121",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:55"
          },
          {
            "label": "investmentStrategyContract",
            "offset": 0,
            "slot": "122",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:57"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:59"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "124",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:61"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "125",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "51e51af8dbdc969bd5b1fccc4fda472f0c0b205ee53b34884a9ee4e55db75765": {
      "address": "0x4237f23858FD8B27F59Fb065eb37d6e0687bDD9D",
      "txHash": "0x855ff2c1c127ac398c621b57f70b7ad30aad08c2b9b4ec164f28ab5c5b1ab5bb",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:24"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IChaserRegistry)11321",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:27"
          },
          {
            "label": "messenger",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserMessenger)11078",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:28"
          },
          {
            "label": "bridgeReceiverAddress",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:30"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:31"
          },
          {
            "label": "poolToCurrentPositionMarket",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:33"
          },
          {
            "label": "poolToCurrentProtocolHash",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:34"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:35"
          },
          {
            "label": "userDepositNonce",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:36"
          },
          {
            "label": "userCumulativeDeposits",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:37"
          },
          {
            "label": "poolAddressToDepositNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:38"
          },
          {
            "label": "poolAddressToWithdrawNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:39"
          },
          {
            "label": "poolToDepositNonceAtEntrance",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:40"
          },
          {
            "label": "poolToWithdrawNonceAtEntrance",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:41"
          },
          {
            "label": "poolInitialized",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:42"
          },
          {
            "label": "poolToNonceToCumulativeDeposits",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:43"
          },
          {
            "label": "poolToNonceToCumulativeWithdraw",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserMessenger)11078": {
            "label": "contract IChaserMessenger",
            "numberOfBytes": "20"
          },
          "t_contract(IChaserRegistry)11321": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "160a6cbd12eeae1aa362708b23f6ebd2f24140fef8e9ceecf7954e3749af71be": {
      "address": "0xb1B4A5b1Ecbe479B7B7521074A488b5256c9e464",
      "txHash": "0xd6cdda9cbb021c02d82183d6f91c374967a90987f31ee85c4b8954c82361797a",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)11792",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)11321",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)3955_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)11321": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)11792": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)3955_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)3955_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "aaedd5d8b174bfb10b7edb23dbbced7ac6d8b82a972ed17412850b9b260ff77f": {
      "address": "0x02a2C1731c3Cd9d8904d76e32f00dE391cd44937",
      "txHash": "0x8ea8971bcc53e3af376636965f0702cf3b0299b032b749bdf06c359054a98456",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)6262",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:14"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:16"
          },
          {
            "label": "poolAddressToCumulativeProtocolFees",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:17"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:18"
          },
          {
            "label": "testREWARD",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)6262": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ef11876579c703b9512ecab74e3a4aabcc52897b85cd8ee6d5c21df187cd958d": {
      "address": "0x454712F3F9Fc7C297fBb81b440aB8693D691BC60",
      "txHash": "0x15de74d51f4b21427d4e201191396611fef93045494205d87c397b400b5a1b7b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "poolEnabled",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:15"
          },
          {
            "label": "chainIdToBridgeReceiver",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:17"
          },
          {
            "label": "chainIdToMessageReceiver",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:19"
          },
          {
            "label": "chainIdToSpokePoolAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:21"
          },
          {
            "label": "chainIdToRouter",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:23"
          },
          {
            "label": "chainIdToLinkAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:25"
          },
          {
            "label": "chainIdToSelector",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint64)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:27"
          },
          {
            "label": "chainIdToUmaAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:29"
          },
          {
            "label": "chainIdToUniswapFactory",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:31"
          },
          {
            "label": "hashedProtocolToEnabled",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:33"
          },
          {
            "label": "hashToProtocol",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:35"
          },
          {
            "label": "poolCountToPool",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:37"
          },
          {
            "label": "poolAddressToBroker",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:39"
          },
          {
            "label": "addressUSDC",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:41"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:43"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:45"
          },
          {
            "label": "receiverAddress",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:47"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "118",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:49"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "119",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:51"
          },
          {
            "label": "uniswapFactory",
            "offset": 0,
            "slot": "120",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:53"
          },
          {
            "label": "arbitrationContract",
            "offset": 0,
            "slot": "121",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:55"
          },
          {
            "label": "investmentStrategyContract",
            "offset": 0,
            "slot": "122",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:57"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:59"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "124",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:61"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "125",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "efc13a1cf8f0e672630107a96f7e89c0813dbab98085d627934584d8383ef071": {
      "address": "0x933f5f3564742a97e4703012E8b298db514AD4f1",
      "txHash": "0xe58210e6c1acffbc79015188085cdaea86809f7ab42ff33cbe98a7c37593a32b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:24"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IChaserRegistry)12609",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:27"
          },
          {
            "label": "messenger",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserMessenger)12366",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:28"
          },
          {
            "label": "bridgeReceiverAddress",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:30"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:31"
          },
          {
            "label": "poolToCurrentPositionMarket",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:33"
          },
          {
            "label": "poolToCurrentProtocolHash",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:34"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:35"
          },
          {
            "label": "userDepositNonce",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:36"
          },
          {
            "label": "userCumulativeDeposits",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:37"
          },
          {
            "label": "poolAddressToDepositNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:38"
          },
          {
            "label": "poolAddressToWithdrawNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:39"
          },
          {
            "label": "poolToDepositNonceAtEntrance",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:40"
          },
          {
            "label": "poolToWithdrawNonceAtEntrance",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:41"
          },
          {
            "label": "poolInitialized",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:42"
          },
          {
            "label": "poolToNonceToCumulativeDeposits",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:43"
          },
          {
            "label": "poolToNonceToCumulativeWithdraw",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserMessenger)12366": {
            "label": "contract IChaserMessenger",
            "numberOfBytes": "20"
          },
          "t_contract(IChaserRegistry)12609": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ea563dc27b6d2aa559e5ce59602faf8a8c4ecbb2d25e982a1bd1ff4212527516": {
      "address": "0x7213e887a28A13F995Ac9e2A386bBB7F423917d0",
      "txHash": "0xe24c51eb0c7257fd6657d89433edd4725a8c0139fb1dfd4160f5e21345ec22f0",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bridgeLogic",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IBridgeLogic)2279",
            "contract": "BridgeReceiver",
            "src": "contracts/BridgeReceiver.sol:14"
          },
          {
            "label": "spokePoolAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "BridgeReceiver",
            "src": "contracts/BridgeReceiver.sol:15"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeReceiver",
            "src": "contracts/BridgeReceiver.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBridgeLogic)2279": {
            "label": "contract IBridgeLogic",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5dc7100cc7f2e0799e5d8341436c493706c6d019899722664b6e38d11d82d18b": {
      "address": "0x01eCDe642908b81F7a634067aA26c66E1A4c8c6B",
      "txHash": "0x1a0283ac7d6fa50303e2fbc3908386af41ea4a72784cd53da1879ff881b7d20c",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:16"
          },
          {
            "label": "registryAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:17"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e3323f83f86d138fcffbf4ff113f7dda747b504044e7aba1197b73fd828116f5": {
      "address": "0x400e92d56c85f88e5ad0Ce3998e5B3733eAE24C2",
      "txHash": "0x24bbe39e9818511c520c4778e1328dbb096d59ca79bb06f2988448c376925391",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)15275",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)14793",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:21"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)4267_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)14793": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)15275": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)4267_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)4267_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "029a51a97bbe9021badaf1c96d3257622c9abb2e8d1304892a09f32601a37869": {
      "address": "0x908fd03167824121c57Aa3Aa66C891587454fdee",
      "txHash": "0xfccfa2d8fa344beff22bbbefd0091bcb5de16a93be801ca3af8d24888d0970d0",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)10089",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:14"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:16"
          },
          {
            "label": "poolAddressToCumulativeProtocolFees",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:17"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:18"
          },
          {
            "label": "testREWARD",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)10089": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "56a51eac4d91577718e7b8b4835de8e255c04afdcd2ca29ea9225979f3fd20c1": {
      "address": "0xba51728252C2c253775219F0b34508E3c71fC16D",
      "txHash": "0x29d7d93143b427fd134f1b2f592d3dd7fba67b4bf26606c4f34aade2f65bc3d8",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:24"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IChaserRegistry)5034",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:27"
          },
          {
            "label": "messenger",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserMessenger)4791",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:28"
          },
          {
            "label": "bridgeReceiverAddress",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:30"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:31"
          },
          {
            "label": "poolToCurrentPositionMarket",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:33"
          },
          {
            "label": "poolToCurrentProtocolHash",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:34"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:35"
          },
          {
            "label": "userDepositNonce",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:36"
          },
          {
            "label": "userCumulativeDeposits",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:37"
          },
          {
            "label": "poolAddressToDepositNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:38"
          },
          {
            "label": "poolAddressToWithdrawNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:39"
          },
          {
            "label": "poolToDepositNonceAtEntrance",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:40"
          },
          {
            "label": "poolToWithdrawNonceAtEntrance",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:41"
          },
          {
            "label": "poolInitialized",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:42"
          },
          {
            "label": "poolToNonceToCumulativeDeposits",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:43"
          },
          {
            "label": "poolToNonceToCumulativeWithdraw",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserMessenger)4791": {
            "label": "contract IChaserMessenger",
            "numberOfBytes": "20"
          },
          "t_contract(IChaserRegistry)5034": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d6f0422cf932268e02834633f4d89768b6562478b4530f4cf300a93c4f7cc301": {
      "address": "0x65434DDe9ddD19C4F596124619A62A988B1c12F6",
      "txHash": "0x9e57a5c0ce07e0bc6c0f72ea25f0e2208a0ae7654fd94933789551b12a44b1fe",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:24"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IChaserRegistry)5039",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:27"
          },
          {
            "label": "messenger",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserMessenger)4796",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:28"
          },
          {
            "label": "bridgeReceiverAddress",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:30"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:31"
          },
          {
            "label": "poolToCurrentPositionMarket",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:33"
          },
          {
            "label": "poolToCurrentProtocolHash",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:34"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:35"
          },
          {
            "label": "userDepositNonce",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:36"
          },
          {
            "label": "userCumulativeDeposits",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:37"
          },
          {
            "label": "poolAddressToDepositNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:38"
          },
          {
            "label": "poolAddressToWithdrawNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:39"
          },
          {
            "label": "poolToDepositNonceAtEntrance",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:40"
          },
          {
            "label": "poolToWithdrawNonceAtEntrance",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:41"
          },
          {
            "label": "poolInitialized",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:42"
          },
          {
            "label": "poolToNonceToCumulativeDeposits",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:43"
          },
          {
            "label": "poolToNonceToCumulativeWithdraw",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserMessenger)4796": {
            "label": "contract IChaserMessenger",
            "numberOfBytes": "20"
          },
          "t_contract(IChaserRegistry)5039": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "80c86be77ca6761ec225d07090ad43b02244bee2e2ef4cb7a16f0158e98c7e7e": {
      "address": "0x99C6779bd71A8cB876DA345f3E8fB89b69F778E8",
      "txHash": "0xbd173bc9494fc825c0a6d858d53cf7c07f6c3b6dd0a1569a69539f0f20742216",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:24"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IChaserRegistry)10084",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:27"
          },
          {
            "label": "messenger",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserMessenger)9841",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:28"
          },
          {
            "label": "bridgeReceiverAddress",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:30"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:31"
          },
          {
            "label": "poolToCurrentPositionMarket",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:33"
          },
          {
            "label": "poolToCurrentProtocolHash",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:34"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:35"
          },
          {
            "label": "userDepositNonce",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:36"
          },
          {
            "label": "userCumulativeDeposits",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:37"
          },
          {
            "label": "poolAddressToDepositNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:38"
          },
          {
            "label": "poolAddressToWithdrawNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:39"
          },
          {
            "label": "poolToDepositNonceAtEntrance",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:40"
          },
          {
            "label": "poolToWithdrawNonceAtEntrance",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:41"
          },
          {
            "label": "poolInitialized",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:42"
          },
          {
            "label": "poolToNonceToCumulativeDeposits",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:43"
          },
          {
            "label": "poolToNonceToCumulativeWithdraw",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserMessenger)9841": {
            "label": "contract IChaserMessenger",
            "numberOfBytes": "20"
          },
          "t_contract(IChaserRegistry)10084": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2e498096770f6f464f8dd0717fdb8920da83466aca3b64d6b7f33380f6ab50c4": {
      "address": "0xf23Ae97BCDb5A376A4A132907A9907908732F008",
      "txHash": "0x12870b73e4f79d40d2709d3b4c958f039397ac9bc5430d07b8155afb25b9432f",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)6259",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:14"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:16"
          },
          {
            "label": "poolAddressToCumulativeProtocolFees",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:17"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:18"
          },
          {
            "label": "testREWARD",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)6259": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b0f0878e34e90fba5c4f9cee3bfb2a0e27bac8043533d6ec1000c9e092aba968": {
      "address": "0x83D79cf48E9831b0749Ee3E80bcc659FA5C902F2",
      "txHash": "0x32da4b257b76a33fc3c35ab98087fc7c3e22d0499b91123b1f20b51b99ece9e4",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 2,
            "slot": "0",
            "type": "t_address",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:16"
          },
          {
            "label": "registryAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:17"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "95975b222678d933da37f022c661a1cfde51bcfa084ddfda3a8259c97a340e45": {
      "address": "0x72E87e68798D4C41d2474f0c5ebD9c77266EFfB8",
      "txHash": "0x8339eb7befa4abc1ffc15f2bb6a8ba09516360ed00ec46a026a5f66289c72275",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)14793",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:14"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:16"
          },
          {
            "label": "poolAddressToCumulativeProtocolFees",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:17"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:18"
          },
          {
            "label": "testREWARD",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)14793": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "47d5f5738658975e7129c63c70e33e584fd8fa78623766c0dee51353384acd29": {
      "address": "0xC0d653Fa6D2113e812A2C83B7c818B054a3Bf35C",
      "txHash": "0xb553eb1b90d8981e04ce29d6f5fcae3c879afda6d3b6e5b341ff7cc506de28a7",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "poolEnabled",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:15"
          },
          {
            "label": "chainIdToBridgeReceiver",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:17"
          },
          {
            "label": "chainIdToMessageReceiver",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:19"
          },
          {
            "label": "chainIdToSpokePoolAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:21"
          },
          {
            "label": "chainIdToRouter",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:23"
          },
          {
            "label": "chainIdToLinkAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:25"
          },
          {
            "label": "chainIdToSelector",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint64)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:27"
          },
          {
            "label": "chainIdToUmaAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:29"
          },
          {
            "label": "hashedProtocolToEnabled",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:31"
          },
          {
            "label": "hashToProtocol",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:33"
          },
          {
            "label": "poolCountToPool",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:35"
          },
          {
            "label": "poolAddressToBroker",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:37"
          },
          {
            "label": "addressUSDC",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:39"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:41"
          },
          {
            "label": "uniswapFactory",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:43"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:45"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:47"
          },
          {
            "label": "receiverAddress",
            "offset": 0,
            "slot": "118",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:49"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "119",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:51"
          },
          {
            "label": "arbitrationContract",
            "offset": 0,
            "slot": "120",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:53"
          },
          {
            "label": "investmentStrategyContract",
            "offset": 0,
            "slot": "121",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:55"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "122",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:57"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:59"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "124",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "70fa5eac3c0485e5a43e590188398e3483e9ed62ebaceace130c64f923020aed": {
      "address": "0xe094Be88B1b0Ab5CD08E761469C51A26c5466E1A",
      "txHash": "0xeb464138c1a50d7c5a7921688567d66bdc7282dfa5b3fd9db72068da6c01dfd8",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:24"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IChaserRegistry)5082",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:27"
          },
          {
            "label": "messenger",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserMessenger)4835",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:28"
          },
          {
            "label": "bridgeReceiverAddress",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:30"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:31"
          },
          {
            "label": "poolToCurrentPositionMarket",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:33"
          },
          {
            "label": "poolToCurrentProtocolHash",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:34"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:35"
          },
          {
            "label": "userDepositNonce",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:36"
          },
          {
            "label": "userCumulativeDeposits",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:37"
          },
          {
            "label": "poolAddressToDepositNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:38"
          },
          {
            "label": "poolAddressToWithdrawNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:39"
          },
          {
            "label": "poolToDepositNonceAtEntrance",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:40"
          },
          {
            "label": "poolToWithdrawNonceAtEntrance",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:41"
          },
          {
            "label": "poolInitialized",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:42"
          },
          {
            "label": "poolToNonceToCumulativeDeposits",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:43"
          },
          {
            "label": "poolToNonceToCumulativeWithdraw",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:45"
          },
          {
            "label": "poolToPositionAtEntrance",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserMessenger)4835": {
            "label": "contract IChaserMessenger",
            "numberOfBytes": "20"
          },
          "t_contract(IChaserRegistry)5082": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "45ca09f3abc2656af9ef4682219599edd09e704b7ce7e5eddc34a859711ec635": {
      "address": "0x5E972709Af4C597c31D052c1f2Ee6a54c35eE766",
      "txHash": "0x99dac52a5388f795ce28331ebb343919078c598934241a82268bc0c6099071b2",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:16"
          },
          {
            "label": "registryAddress",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:17"
          },
          {
            "label": "chainId",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "Integrator",
            "src": "contracts/Integrator.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "a9e728f5954913cbafe092f576e45b6077aa0a21a5c2a19e5eba9a6f684ac006": {
      "address": "0xe1317B74766710aA0F9dE8a88Fe11F3F505abaA6",
      "txHash": "0xe7ac24ffc62e736566bb512cb2e0bb7252fe062b234e9ba918c0a8593b9c84d3",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)7238",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "assertionLiveness",
            "offset": 20,
            "slot": "102",
            "type": "t_uint64",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)7192",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:21"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)2894_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)7192": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)7238": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)2894_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)2894_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e9001456c15e230686e23d74a1d983b3d2baa42ca0e633fa3478e68c0239fb08": {
      "address": "0xcEd8016b6A45277D32400ed621a8FdD09bB922B0",
      "txHash": "0xc38fe5f95c3d24201973133daa56914e4807eceddaa3ae5937523e942fb74e85",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)7192",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:14"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:16"
          },
          {
            "label": "poolAddressToCumulativeProtocolFees",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:17"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:18"
          },
          {
            "label": "testREWARD",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)7192": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "eb55fb7fe9647bfde7613b2d869e6de6a499180bbb353a593e1f6c1b84b6b5b6": {
      "address": "0x9b347d22272d88a75cB127086BFdeeA3D8Af6c04",
      "txHash": "0xf15dc19e0116888b2e06966378fa3c1085ca2153236ca341b212a3afb06b296d",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)7348",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:14"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:16"
          },
          {
            "label": "poolAddressToCumulativeProtocolFees",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:17"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)7348": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0e750c00522b5417d4d47fbb8b8e6533808112f66ee280f4dc980ff44eff6628": {
      "address": "0xC21Af741EE54e4d4e0E7582633753e4902e559D4",
      "txHash": "0xd7c513cd066925298cb9684cd48baa193d5d319b2d1ce886d489520a3f090a57",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)15042",
            "contract": "ChaserTreasury",
            "src": "contracts/ChaserTreasury.sol:12"
          },
          {
            "label": "poolAddressToCumulativeProtocolFees",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ChaserTreasury",
            "src": "contracts/ChaserTreasury.sol:14"
          },
          {
            "label": "managerAddress",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "ChaserTreasury",
            "src": "contracts/ChaserTreasury.sol:15"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "ChaserTreasury",
            "src": "contracts/ChaserTreasury.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)15042": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c5febde45353171d609a965372312e9eeca652a600f5b30f40be52f5f0051a56": {
      "address": "0x278e467f6Aed0b08250d161C87758115b4628Bf8",
      "txHash": "0xb36fc4aeb462c1f656b83cd03885d22052904e4cd7198100a97546f9a5342fab",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "poolEnabled",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:15"
          },
          {
            "label": "chainIdToBridgeReceiver",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:17"
          },
          {
            "label": "chainIdToMessageReceiver",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:19"
          },
          {
            "label": "chainIdToSpokePoolAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:21"
          },
          {
            "label": "chainIdToRouter",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:23"
          },
          {
            "label": "chainIdToLinkAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:25"
          },
          {
            "label": "chainIdToSelector",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint64)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:27"
          },
          {
            "label": "chainIdToUmaAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:29"
          },
          {
            "label": "hashedProtocolToEnabled",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:31"
          },
          {
            "label": "hashToProtocol",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:33"
          },
          {
            "label": "poolCountToPool",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:35"
          },
          {
            "label": "poolAddressToBroker",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:37"
          },
          {
            "label": "addressUSDC",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:39"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:41"
          },
          {
            "label": "uniswapFactory",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:43"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:45"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:47"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 0,
            "slot": "118",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:49"
          },
          {
            "label": "receiverAddress",
            "offset": 0,
            "slot": "119",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:51"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "120",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:53"
          },
          {
            "label": "arbitrationContract",
            "offset": 0,
            "slot": "121",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:55"
          },
          {
            "label": "investmentStrategyContract",
            "offset": 0,
            "slot": "122",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:57"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:59"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "124",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:61"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "125",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b410eb5ee340260e171970e274b5be48dc67fc4a36d2090ee06d066ca4dffe95": {
      "address": "0xeB5001E1CAd168142a14a63453F9c0df6fd1879b",
      "txHash": "0x36ce05c77814611a8b9d227778729708d803011fe19d17cbf0ec773cb6f9062b",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "protocolFeePct",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:12"
          },
          {
            "label": "depositIdToDepositor",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:14"
          },
          {
            "label": "depositIdToDepositAmount",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:15"
          },
          {
            "label": "depositIdToTokensMinted",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:16"
          },
          {
            "label": "depositIdToPoolTokenSupply",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:17"
          },
          {
            "label": "poolToPendingDeposits",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:18"
          },
          {
            "label": "withdrawIdToDepositor",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:20"
          },
          {
            "label": "withdrawIdToAmount",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:21"
          },
          {
            "label": "withdrawIdToUserPoolTokens",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:22"
          },
          {
            "label": "withdrawIdToTokensBurned",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:23"
          },
          {
            "label": "poolToPendingWithdraws",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:24"
          },
          {
            "label": "poolDepositNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:26"
          },
          {
            "label": "poolWithdrawNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:27"
          },
          {
            "label": "poolPivotNonce",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:28"
          },
          {
            "label": "poolToPivotPending",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:29"
          },
          {
            "label": "poolToUserPendingWithdraw",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:31"
          },
          {
            "label": "poolToUserPendingDeposit",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:33"
          },
          {
            "label": "targetPositionMarketId",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:36"
          },
          {
            "label": "targetPositionChain",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:37"
          },
          {
            "label": "targetPositionProtocolHash",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:38"
          },
          {
            "label": "targetPositionProtocol",
            "offset": 0,
            "slot": "121",
            "type": "t_mapping(t_address,t_string_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:39"
          },
          {
            "label": "currentPositionAddress",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:41"
          },
          {
            "label": "currentPositionMarketId",
            "offset": 0,
            "slot": "123",
            "type": "t_mapping(t_address,t_bytes_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:42"
          },
          {
            "label": "currentPositionProtocolHash",
            "offset": 0,
            "slot": "124",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:43"
          },
          {
            "label": "currentPositionProtocol",
            "offset": 0,
            "slot": "125",
            "type": "t_mapping(t_address,t_string_storage)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:44"
          },
          {
            "label": "currentRecordPositionValue",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:45"
          },
          {
            "label": "currentPositionValueTimestamp",
            "offset": 0,
            "slot": "127",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:46"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "128",
            "type": "t_contract(IChaserRegistry)7348",
            "contract": "PoolCalculations",
            "src": "contracts/PoolCalculations.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)7348": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes_storage)": {
            "label": "mapping(address => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_string_storage)": {
            "label": "mapping(address => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "70c7e498f72867fa331b8321aff2c7a4c39c940dda2a84c6f26738287930ccc1": {
      "address": "0x4Ce4ab083F36BF89Ee987EF137B5fcda479F46e6",
      "txHash": "0x7b7ccf943e8cda678a9e6e3a72046f713b57f40c42f30e45c9728535b8766bb1",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:24"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:25"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(IChaserRegistry)15042",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:27"
          },
          {
            "label": "messenger",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserMessenger)14790",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:28"
          },
          {
            "label": "bridgeReceiverAddress",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:30"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_address",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:31"
          },
          {
            "label": "poolToCurrentPositionMarket",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:33"
          },
          {
            "label": "poolToCurrentProtocolHash",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:34"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:35"
          },
          {
            "label": "userDepositNonce",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:36"
          },
          {
            "label": "userCumulativeDeposits",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:37"
          },
          {
            "label": "poolAddressToDepositNonce",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:38"
          },
          {
            "label": "poolAddressToWithdrawNonce",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:39"
          },
          {
            "label": "poolToDepositNonceAtEntrance",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:40"
          },
          {
            "label": "poolToWithdrawNonceAtEntrance",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:41"
          },
          {
            "label": "poolInitialized",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:42"
          },
          {
            "label": "poolToNonceToCumulativeDeposits",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:43"
          },
          {
            "label": "poolToNonceToCumulativeWithdraw",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:45"
          },
          {
            "label": "poolToPositionAtEntrance",
            "offset": 0,
            "slot": "119",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "BridgeLogic",
            "src": "contracts/BridgeLogic.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserMessenger)14790": {
            "label": "contract IChaserMessenger",
            "numberOfBytes": "20"
          },
          "t_contract(IChaserRegistry)15042": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0b910c6260dd0d623f714fdb4fb368069d4c03d2f4bb49b6851c247073e9888b": {
      "address": "0x2Ef3C455ae6E701294d6624aFD676a8325d24720",
      "txHash": "0xd9c332e23d32603557f533b23265763b8030a47aeb0724de40d506f9f0a8befb",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "bridgeLogic",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IBridgeLogic)14643",
            "contract": "BridgeReceiver",
            "src": "contracts/BridgeReceiver.sol:14"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IChaserRegistry)15042",
            "contract": "BridgeReceiver",
            "src": "contracts/BridgeReceiver.sol:15"
          },
          {
            "label": "spokePoolAddress",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "BridgeReceiver",
            "src": "contracts/BridgeReceiver.sol:16"
          },
          {
            "label": "poolToAsset",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_address)",
            "contract": "BridgeReceiver",
            "src": "contracts/BridgeReceiver.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IBridgeLogic)14643": {
            "label": "contract IBridgeLogic",
            "numberOfBytes": "20"
          },
          "t_contract(IChaserRegistry)15042": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ae64df3dc484b4331c5ae960bda25995d62b8a56383983371ebbef1ffc655ae0": {
      "address": "0xb170062EAeE74D58a288472eA7C1F4d6E57ADD29",
      "txHash": "0xf36dfd0c96bc8d351beb8c78dfbfeb744e2f66268cd1459e6671bdbd9a019a31",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "poolEnabled",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:15"
          },
          {
            "label": "chainIdToBridgeReceiver",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:17"
          },
          {
            "label": "chainIdToMessageReceiver",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:19"
          },
          {
            "label": "chainIdToSpokePoolAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:21"
          },
          {
            "label": "chainIdToRouter",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:23"
          },
          {
            "label": "chainIdToLinkAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:25"
          },
          {
            "label": "chainIdToSelector",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint64)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:27"
          },
          {
            "label": "chainIdToUmaAddress",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:29"
          },
          {
            "label": "hashedProtocolToEnabled",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:31"
          },
          {
            "label": "hashToProtocol",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:33"
          },
          {
            "label": "poolCountToPool",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:35"
          },
          {
            "label": "poolAddressToBroker",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:37"
          },
          {
            "label": "addressUSDC",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:39"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:41"
          },
          {
            "label": "uniswapFactory",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "Registry",
            "src": "contracts/Registry.sol:43"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:45"
          },
          {
            "label": "treasuryAddress",
            "offset": 0,
            "slot": "117",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:47"
          },
          {
            "label": "bridgeLogicAddress",
            "offset": 0,
            "slot": "118",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:49"
          },
          {
            "label": "receiverAddress",
            "offset": 0,
            "slot": "119",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:51"
          },
          {
            "label": "integratorAddress",
            "offset": 0,
            "slot": "120",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:53"
          },
          {
            "label": "arbitrationContract",
            "offset": 0,
            "slot": "121",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:55"
          },
          {
            "label": "investmentStrategyContract",
            "offset": 0,
            "slot": "122",
            "type": "t_address",
            "contract": "Registry",
            "src": "contracts/Registry.sol:57"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "123",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:59"
          },
          {
            "label": "managerChainId",
            "offset": 0,
            "slot": "124",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:61"
          },
          {
            "label": "poolCount",
            "offset": 0,
            "slot": "125",
            "type": "t_uint256",
            "contract": "Registry",
            "src": "contracts/Registry.sol:63"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint64)": {
            "label": "mapping(uint256 => uint64)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "19ebf21d6096984b181021f7afa2359ed27f5a9ced70c80a836097279d96b479": {
      "address": "0x3b0e9Ca2a2D6ccfe841A27efc97Ceb0e6BDC40e9",
      "txHash": "0xdfc0bcf5e02c90e3af881c034ef89f8f38edf81727386c6d5ddc3c29be972942",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "umaCurrency",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:16"
          },
          {
            "label": "oo",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IOptimisticOracleV3)1988",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:17"
          },
          {
            "label": "defaultIdentifier",
            "offset": 0,
            "slot": "103",
            "type": "t_bytes32",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:18"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(IChaserRegistry)1942",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:19"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "105",
            "type": "t_uint256",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:20"
          },
          {
            "label": "assertionToRequestedMarketId",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_bytes32,t_bytes_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:22"
          },
          {
            "label": "assertionToRequestedProtocol",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:23"
          },
          {
            "label": "assertionToRequestedChainId",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:24"
          },
          {
            "label": "assertionToPoolAddress",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:25"
          },
          {
            "label": "assertionToBlockTime",
            "offset": 0,
            "slot": "110",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:26"
          },
          {
            "label": "assertionToSettleTime",
            "offset": 0,
            "slot": "111",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:27"
          },
          {
            "label": "assertionToOpeningTime",
            "offset": 0,
            "slot": "112",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:28"
          },
          {
            "label": "assertionToReward",
            "offset": 0,
            "slot": "113",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:29"
          },
          {
            "label": "poolPivotedTimestamp",
            "offset": 0,
            "slot": "114",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:30"
          },
          {
            "label": "poolHasAssertionOpen",
            "offset": 0,
            "slot": "115",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:31"
          },
          {
            "label": "poolBondUSDC",
            "offset": 0,
            "slot": "116",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:32"
          },
          {
            "label": "poolLiveness",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_uint64)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:33"
          },
          {
            "label": "assertionsData",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(DataAssertion)841_storage)",
            "contract": "ArbitrationContract",
            "src": "contracts/ArbitrationContract.sol:34"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IChaserRegistry)1942": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_contract(IOptimisticOracleV3)1988": {
            "label": "contract IOptimisticOracleV3",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint64)": {
            "label": "mapping(address => uint64)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bytes_storage)": {
            "label": "mapping(bytes32 => bytes)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(DataAssertion)841_storage)": {
            "label": "mapping(bytes32 => struct ArbitrationContract.DataAssertion)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(DataAssertion)841_storage": {
            "label": "struct ArbitrationContract.DataAssertion",
            "members": [
              {
                "label": "data",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "asserter",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "resolved",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "dfc0924e462075d171a4e727da8d223ada15d1a58e48a2aecf0d528651d3c08c": {
      "address": "0x15301cE9d625C557C49878276645cE9E3ed624c2",
      "txHash": "0x5a80ad8f56d3f4fe9a113670fa349f11022f7fc09b571a32d037adde30aef05a",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)1770",
            "contract": "ChaserTreasury",
            "src": "contracts/ChaserTreasury.sol:12"
          },
          {
            "label": "poolAddressToCumulativeProtocolFees",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ChaserTreasury",
            "src": "contracts/ChaserTreasury.sol:14"
          },
          {
            "label": "managerAddress",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "ChaserTreasury",
            "src": "contracts/ChaserTreasury.sol:15"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "ChaserTreasury",
            "src": "contracts/ChaserTreasury.sol:16"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)1770": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8c6377cd53ca9f1dabe35ffb19d7762a04f41627624ec71ce965832372b1f3ea": {
      "address": "0xe7f8a08C91219FB6e38E3220A654aDB1d3F36CD5",
      "txHash": "0x1a75949936a42dc1f30214b5c79ef073b33adba33b630067c707542dc7cb0a1d",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "registry",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IChaserRegistry)4977",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:14"
          },
          {
            "label": "currentChainId",
            "offset": 0,
            "slot": "102",
            "type": "t_uint256",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:16"
          },
          {
            "label": "poolAddressToCumulativeProtocolFees",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:17"
          },
          {
            "label": "poolCalculationsAddress",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "ChaserManager",
            "src": "contracts/ChaserManager.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IChaserRegistry)4977": {
            "label": "contract IChaserRegistry",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
